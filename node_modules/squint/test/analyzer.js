var assert = require( 'assert' )
  , Analyzer = require( 'squint/analyzer' ).Analyzer
  , Parser = require( 'squint/test/parser' ).Parser;		// notice ../test/..

function testAnalyzer( code, event, expect ) {
  var parser = new Parser()
    , instance = new Analyzer( parser );
  
  parser.expect( event, expect );
  parser.process( code );
  return parser;
}

function runTest() {

  var parser = new Parser()
    , instance = new Analyzer( parser );
  
  parser.expect( 'open', 'a<b<>> text text()' );
  parser.expect( 'template parameters', 'a<b<>>' );
  parser.expect( 'function signature', 'text text()' );
  parser.process( 'a<b<>> text text() {' );
    

/*  
  testAnalyzer( 'text text() { text text; }', 'open function' );
  testAnalyzer( 'template text text() {}', 'open template function' );
  testAnalyzer( 'template< template< class > > text text() { text text; }', 'open template function' );
  testAnalyzer( 'namespace { text text; }', 'open namespace' );
  testAnalyzer( 'namespace xyz { text text; }', 'open namespace', 'xyz' );
*/
}

module.exports = {
  run : runTest
};
  
