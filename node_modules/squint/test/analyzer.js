var assert = require( 'assert' )
  , Parser = require( 'squint/parser' ).Parser
  , Analyzer = require( 'squint/analyzer' ).Analyzer
  , events = require( 'events' );

type();
namespace();

function type() {

  var emitter = new events.EventEmitter()
    , parser = new Parser( emitter )
    , analyzer = new Analyzer( emitter ); 
    
  parser.process( 'template < class T > > void foo()' );
  parser.process( 'template < class T > > class' );
  parser.process( 'template < class T > > struct' );
};

function namespace() {
  var emitter = new events.EventEmitter()
    , parser = new Parser( emitter )
    , analyzer = new Analyzer( emitter )
    , fail = assert.fail;
  
  emitter.on( 'open namespace', function( code ) {
    assert.equal( code, 'text' );    
    process.removeListener( 'exit', fail );
  } ); 
  
  process.on( 'exit', fail )
  parser.process( 'namespace text { text text; }' );
}