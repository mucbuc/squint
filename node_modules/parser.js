function Parser( emitter ) {

  var re = { 
    namespaceDeclare: RegExp( '^namespace\\s*\\w*\\s*{' ), 
    namespaceRemove: RegExp( 'namespace|\\s|{', 'g' ), 
    blockName: RegExp( '[^;{}]*[\\w\\()]+\\s*{', 'g' ),
    deliminators: RegExp( '.*?[;{}]', 'g' )
  };

  this.process = function( code ) {
    var matches = code.match( re.deliminators );
    
    if (matches) {
      matches.forEach( function( match ) {
        var source = match.slice( 0, match.length - 1 ).trim();
        switch (match[ match.length - 1 ]) {
          case ';':
            emitter.emit( 'statement', source );    
            break;
          case '{':
            emitter.emit( 'open', source );    
            break;
          case '}':
            emitter.emit( 'close', source );    
            break;
        }
      } ); 
    }
  }; 
}; 

module.exports.Parser = Parser;
